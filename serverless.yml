service: roth-api-admin
frameworkVersion: "3"
useDotenv: true
package:
  individually: true
provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-2
  deploymentPrefix: ${file(./env/variable.js):folderName}
  deploymentBucket:
    name: ${file(./env/variable.js):bucketName}
functions:
  signup:
    handler: src/functions/sign-up.handler
    role: RothAdminSignUpRole
    events:
      - httpApi:
          path: /signup
          method: POST
    environment:
      COGNITO_CLIENT_ID: ${file(./env/variable.js):cognitoClientId}
  preSignup:
    handler: src/functions/pre-sign-up.handler
    
plugins:
  - serverless-esbuild
resources:
  Resources:
    RothAdminSignUpRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: roth-admin-signup-role
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: roth-admin-signup-policy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - cognito-idp:SignUp
                  Resource:
                    - "*"
                - Effect: Allow
                  Action:
                    - logs:PutLogEvents
                  Resource:
                    - '*'
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:CreateLogGroup
                    - logs:TagResource
                  Resource:
                    - '*'